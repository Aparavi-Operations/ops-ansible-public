---

name: "Manually dispatched tests"
on:
  workflow_dispatch:

jobs:
  prepare_roles_list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files in the roles folder
        id: changed-roles-files
        uses: tj-actions/changed-files@v35
        with:
          files: roles/**
          json: true
          dir_names: true
          dir_names_max_depth: 2

      - name: test
        run: |
          echo '${{ steps.changed-roles-files.outputs.all_changed_files }}'

    outputs:
      roles: ${{ steps.changed-roles-files.outputs.all_changed_files }}

  dummy_test:
    runs-on: ubuntu-latest
    needs: prepare_roles_list

    steps:
      - run: |
          echo '${{ needs.prepare_roles_list.outputs.roles }}'

  matrix_test:
    runs-on: ubuntu-latest
    needs: prepare_roles_list
    if: ${{ needs.prepare_roles_list.outputs.roles != '' && toJson(fromJson(needs.prepare_roles_list.outputs.roles)) != '[]' }}

    strategy:
      fail-fast: false
      matrix:
        roles: ${{ fromJson(needs.prepare_roles_list.outputs.roles) }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2  # OR "2" -> To retrieve the preceding commit.

      - run: |
          echo ${{ needs.prepare_roles_list.outputs.roles }}
          echo ${{ matrix.roles }}

      #      - uses: actions/setup-python@v4
      #        with:
      #          python-version: '3.9'
      #
      #      - name: Run linter for all roles in roles folder
      #        run: |
      #          echo -e "=== Install ansible-lint ===\n"
      #          pip install ansible ansible-lint
      #          echo -e "=== Run ansible-lint for all roles ===\n"
      #          nofail=0
      #          echo "=== Running linter in ${{ matrix.all_changed_files }} ==="
      #          pushd ${{ matrix.all_changed_files }}
      #          ansible-lint . && excode=$? || excode=$?
      #          if [ "${excode}" != "0" ]; then
      #            echo "=== !!! found errors for ${{ matrix.all_changed_files }} !!! ==="
      #            exit 1
      #          fi
      #          popd
