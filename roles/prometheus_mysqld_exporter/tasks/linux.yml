---

- name: 'Prometheus mysql | Linux | Use credentials from config file'
  when: 'mysql_get_creds_from_aparavi_config | bool'
  block:

    - name: 'Prometheus mysql | Linux | Find aparavi config file'
      ansible.builtin.find:
        paths: '/etc/opt/aparavi-data-ia'
        patterns: ['config.json']
        recurse: true
      register: '__config_files'

    - name: 'Prometheus mysql | Linux | Parse aparavi config file'
      when: '(__config_files.files | default([])) | length == 1'
      block:
        - name: 'Dump aparavi config'
          ansible.builtin.slurp:
            src: '{{ __config_files.files[0].path }}'
          register: '__config_file'

        - name: Prometheus mysql | Linux | Get database info from aparavi config
          ansible.builtin.set_fact:
            __database: >-
              {{ (__config_file.content | b64decode | from_json).database }}

        - name: Prometheus mysql | Linux | Get mysql connection info from config
          ansible.builtin.set_fact:
            __mysql_hostname: '{{ __database.host }}'
            __mysql_username: '{{ __database.user }}'
            __mysql_password: '{{ __database.password }}'
            __mysql_port: '{{ __database.port }}'

- name: 'Prometheus mysql | Linux | Create mySQLd exporter group'
  ansible.builtin.group:
    name: '{{ prometheus_mysqld_exporter_system_group }}'
    state: 'present'
    system: true

- name: 'Prometheus mysql | Linux | Create mySQLd exporter user'
  ansible.builtin.user:
    name: '{{ prometheus_mysqld_exporter_system_user }}'
    groups: '{{ prometheus_mysqld_exporter_system_group }}'
    append: true
    shell: '/usr/sbin/nologin'
    system: true
    createhome: false

- name: 'Prometheus mysql | Linux | Get mySQLd exporter checksum'
  when: 'ansible_version.full is version("2.7", "<")'
  block:

    - name: 'Prometheus mysql | Linux | Get checksum list from GitHub'
      ansible.builtin.set_fact:
        _checksums: >-
          {{ lookup("url", prometheus_mysqld_exporter_sha_url, wantlist=True) |
          list }}
      run_once: true

    - name: 'Prometheus mysql | Linux | Get checksum for proper architecture'
      ansible.builtin.set_fact:
        prometheus_mysqld_exporter_checksum: '{{ item.split(" ")[0] }}'
      loop: '{{ _checksums }}'
      when: '("linux-" + prometheus_mysqld_exporter_arch + ".tar.gz") in item'

- name: 'Prometheus mysql | Linux | Get checksum for proper architecture'
  ansible.builtin.set_fact:
    prometheus_mysqld_exporter_checksum: >-
      {{ prometheus_mysqld_exporter_sha_url }}
  when: 'ansible_version.full is version("2.7", ">=")'

- name: 'Prometheus mysql | Linux | Install mySQLd exporter binary'
  delegate_to: 'localhost'
  check_mode: false
  run_once: true
  become: false
  tags: 'install'
  block:

    - name: 'Prometheus mysql | Linux | Download mySQLd Exporter binary'
      ansible.builtin.get_url:
        url: '{{ prometheus_mysqld_exporter_tar_url }}'
        dest: '{{ prometheus_mysqld_exporter_tar_file }}'
        checksum: 'sha256:{{ prometheus_mysqld_exporter_checksum }}'
        mode: '0644'
        owner: root
        group: root
      register: '_download_binary'
      until: '_download_binary is succeeded'
      retries: 5
      delay: 2
      notify:
        - 'Prometheus mysql | Linux | Restart mysqld exporter'

    - name: 'Prometheus mysql | Linux | Unpack mySQLd Exporter binary'
      ansible.builtin.unarchive:
        src: '{{ prometheus_mysqld_exporter_tar_file }}'
        dest: '/tmp'
        creates: '{{ prometheus_mysqld_exporter_install_dir }}/mysqld_exporter'

- name: 'Prometheus mysql | Linux | Propagate mySQLd Exporter binaries'
  ansible.builtin.copy:
    src: '{{ prometheus_mysqld_exporter_install_dir }}/mysqld_exporter'
    dest: '/usr/local/bin/mysqld_exporter'
    mode: '0750'
    owner: '{{ prometheus_mysqld_exporter_system_user }}'
    group: '{{ prometheus_mysqld_exporter_system_group }}'
  notify: 'Prometheus mysql | Linux | Restart mysqld exporter'
  when: 'not ansible_check_mode'
  tags:
    - 'install'

- name: 'Prometheus mysql | Linux | Copy the mySQLd exporter systemd service'
  ansible.builtin.template:
    src: 'service.j2'
    dest: >-
      /etc/systemd/system/{{ prometheus_mysqld_exporter_service_name }}.service
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'Prometheus mysql | Linux | Restart mysqld exporter'

- name: 'Prometheus mysql | Linux | Create config dir'
  ansible.builtin.file:
    path: '{{ prometheus_mysqld_exporter_config_dir }}'
    state: 'directory'
    owner: 'root'
    group: '{{ prometheus_mysqld_exporter_system_group }}'
    mode: '0750'

- name: 'Prometheus mysql | Linux | Deploy web_config.yml'
  ansible.builtin.template:
    src: 'web_config.yml.j2'
    dest: '{{ prometheus_mysqld_exporter_config_dir }}/web_config.yml'
    owner: 'root'
    group: '{{ prometheus_mysqld_exporter_system_group }}'
    mode: '0640'
  notify:
    - 'Prometheus mysql | Linux | Restart mysqld exporter'

- name: 'Prometheus mysql | Linux | Manage mySQLd TLS encryption'
  when: 'prometheus_mysqld_exporter_tls | bool'
  block:

    - name: 'Prometheus mysql | Linux | Generate certificates'
      when: 'prometheus_mysqld_exporter_tls_cert | length == 0'
      block:
        - name: 'Linux | Generate a Self Signed CA key'
          community.crypto.openssl_privatekey:
            path: '/tmp/cert.key'
            return_content: true
          register: '__result'
          delegate_to: 'localhost'

        - name: 'Linux | Copy Self Signed CA key to host'
          ansible.builtin.copy:
            dest: '{{ prometheus_mysqld_exporter_config_dir }}/cert.key'
            content: '{{ __result.privatekey }}'
            owner: 'root'
            group: '{{ prometheus_mysqld_exporter_system_group }}'
            mode: '0640'
          notify:
            - 'Prometheus mysql | Linux | Restart mysqld exporter'

        - name: 'Linux | Generate Self signed CA cert'
          community.crypto.x509_certificate:
            path: '/tmp/cert.crt'
            privatekey_path: '/tmp/cert.key'
            provider: 'selfsigned'
            selfsigned_not_after: '+520w'
            return_content: true
          register: '__result'
          delegate_to: 'localhost'

        - name: 'Linux | Copy Self signed CA cert to host'
          ansible.builtin.copy:
            dest: '{{ prometheus_mysqld_exporter_config_dir }}/cert.crt'
            content: '{{ __result.certificate }}'
            owner: 'root'
            group: '{{ prometheus_mysqld_exporter_system_group }}'
            mode: '0640'
          notify:
            - 'Prometheus mysql | Linux | Restart mysqld exporter'

- name: 'Check Prometheus mySQLd Exporter service status'
  ansible.builtin.systemd:
    name: '{{ prometheus_mysqld_exporter_service_name }}'
    state: '{{ prometheus_mysqld_exporter_service_state }}'
    enabled: '{{ prometheus_mysqld_exporter_service_enabled }}'
